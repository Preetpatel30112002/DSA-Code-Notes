https://leetcode.com/problems/maximum-subarray/

Maximum Subarray

time:O(n)
space:O(1)

approach:Kadane's Algorithm
-define (-)max no. and take every ele from the array and do addition continuously and also keep comparing with it until you get the maximum value.

code:
class Solution:
    def maxSubArray(self, nums: List[int]) -> int:
        max_sum = float('-inf')
        current_sum = 0

        for i in nums:
            current_sum += i
            if current_sum > max_sum:
                max_sum = current_sum
            if current_sum < 0:
                current_sum = 0
        return max_sum
